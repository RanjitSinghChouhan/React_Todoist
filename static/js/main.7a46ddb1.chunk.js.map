{"version":3,"sources":["assests/images/logo.png","Components/Header.jsx","Components/Sidebar.jsx","Components/Task.jsx","Components/Content.jsx","App.js","index.js"],"names":["Header","className","src","logo","alt","Sidebar","selectTab","setselectTab","console","log","onClick","FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTast","onCancel","onAddTask","useState","task","setTask","setDate","value","onChange","event","target","disabled","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","before","TASKS_HEADER_MAPPING","INBOX","TODAY","NEXT_7","TaskItems","tasks","filter","isAfter","isBefore","addDays","map","text","isToday","Task","showAddTask","setShowAddTask","setTasks","prevState","newTaskItem","length","Content","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a46ddb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9d52f01a.png\";","import React from 'react';\r\nimport logo from '../assests/images/logo.png';\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"nav\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"Todoist\"></img>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from \"react-icons/fa\";\r\nconst Sidebar = ({ selectTab, setselectTab }) => {\r\n    console.log({ selectTab });\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className={selectTab === \"INBOX\" ? \"active\" : \"\"} onClick={() => setselectTab(\"INBOX\")}>\r\n                <FaInbox className=\"icon\" />\r\n                Inbox\r\n            </div>\r\n            <div className={selectTab === \"TODAY\" ? \"active\" : \"\"} onClick={() => setselectTab(\"TODAY\")}>\r\n                <FaRegCalendarAlt className=\"icon\" />\r\n                Today\r\n            </div>\r\n            <div className={selectTab === \"NEXT_7\" ? \"active\" : \"\"} onClick={() => setselectTab(\"NEXT_7\")}>\r\n                <FaRegCalendar className=\"icon\" />\r\n                Next 7 days\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport isAfter from \"date-fns/isAfter\";\r\nimport isBefore from 'date-fns/isBefore';\r\nimport isToday from 'date-fns/isToday';\r\nimport addDays from 'date-fns/addDays';\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\nfunction formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n}\r\nconst AddTast = ({ onCancel, onAddTask }) => {\r\n    const [task, setTask] = useState(\"\");\r\n    const [date, setDate] = useState(null);\r\n    return (\r\n        <div className=\"add-task-dialog\">\r\n            <input value={task} onChange={(event) => setTask(event.target.value)} />\r\n            <div className=\"add-task-actions-container\">\r\n                <div className=\"btn-container\">\r\n                    <button\r\n                        disabled={!task}\r\n                        className=\"add-btn\"\r\n                        onClick={() => {\r\n                            onAddTask(task, date);\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                        }}\r\n                    >\r\n                        Add Task\r\n                    </button>\r\n                    <button className=\"cancel-btn\"\r\n                        onClick={() => {\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                        }\r\n                        }>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n                <div className=\"icon-container\">\r\n                    <DayPickerInput\r\n                        onDayChange={\r\n                            (day) => setDate(day)}\r\n                        placeholder={\r\n                            `${dateFnsFormat(new Date(), FORMAT)}`}\r\n                        formatDate={formatDate}\r\n                        format={FORMAT}\r\n                        dayPickerProps={{\r\n                            modifiers: {\r\n                                disabled: [{ before: new Date() }],\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nconst TASKS_HEADER_MAPPING = {\r\n    INBOX: \"Inbox\",\r\n    TODAY: \"Today\",\r\n    NEXT_7: \"Next 7 days\"\r\n}\r\n\r\nconst TaskItems = ({ selectTab, tasks }) => {\r\n    if (selectTab === \"NEXT_7\") {\r\n        return tasks.filter((task) => isAfter(task.date, new Date()) &&\r\n            isBefore(task.date, addDays(new Date(), 7))\r\n        )\r\n            .map(task => <p>\r\n                {task.text} {dateFnsFormat(new Date(task.date), FORMAT)}{\" \"}\r\n            </p>);\r\n    }\r\n    if (selectTab === \"TODAY\") {\r\n        return tasks\r\n            .filter((task) => isToday(task.date))\r\n            .map((task) => (\r\n                <p>\r\n                    {task.text} {dateFnsFormat(new Date(task.date), FORMAT)}{\" \"}\r\n                </p>\r\n            ));\r\n    }\r\n\r\n    return tasks.map((task) => (\r\n        <p>\r\n            {task.text} {dateFnsFormat(new Date(task.date), FORMAT)}{\" \"}\r\n        </p>\r\n    ));\r\n}\r\n\r\nconst Task = ({ selectTab }) => {\r\n    const [showAddTask, setShowAddTask] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const addNewTask = (text, date) => {\r\n        const newTaskItem = { text, date: date || new Date() };\r\n        setTasks((prevState) => [...prevState, newTaskItem]);\r\n    };\r\n    return (\r\n        <div className=\"tasks\">\r\n            <h1>{TASKS_HEADER_MAPPING[selectTab]}</h1>\r\n            {selectTab === \"INBOX\" ? <div\r\n                className=\"add-task-btn\"\r\n                onClick={() => setShowAddTask((prevState) => !prevState)}\r\n            >\r\n                <span className=\"plus\">+</span>\r\n                <span className=\"add-task-text\">Add Task</span>\r\n            </div> : null}\r\n            {showAddTask && (<AddTast onAddTask={addNewTask} onCancel={() => setShowAddTask(false)} />)}\r\n            {tasks.length > 0 ? (\r\n                <TaskItems tasks={tasks} selectTab={selectTab} />\r\n            ) : (\r\n                <p>No Tasks Yet</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Task from './Task';\r\nconst Content = () => {\r\n    const [selectTab, setselectTab] = useState(\"INBOX\");\r\n    return (\r\n        <section className=\"content\">\r\n            <Sidebar selectTab={selectTab} setselectTab={setselectTab} />\r\n            <Task selectTab={selectTab} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport Header from \"./Components/Header\";\r\nimport Content from \"./Components/Content\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Content />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}